fragment CloudDatabaseClusterResult on CloudDatabaseCluster {
  id
  databases {
    ...CloudDatabaseClusterDatabaseResult
  }
  name
  hostname
  namespace {
    name
  }
  plan {
    cpu
    group
    id
    memory(unit: GB)
    name
    price {
      amount
      currency
    }
    storage
  }
  spec {
    type
    version
  }
  users {
    ...CloudDatabaseClusterUserResult
  }
  adminUser {
    ...CloudDatabaseClusterUserResult
  }
  state
  locked
}

fragment CloudDatabaseClusterPlan on Plan {
  cpu
  group
  id
  memory(unit: GB)
  name
  price {
    amount
    currency
  }
  storage
}

fragment CloudDatabaseClusterSpec on Spec {
  type
  version
}

mutation cloudDatabaseClusterCreate(
  $cloudDatabaseClusterInput: CloudDatabaseClusterCreateInput!
) {
  # @genqlient(flatten: true)
  cloudDatabaseClusterCreate(
    cloudDatabaseClusterInput: $cloudDatabaseClusterInput
  ) {
    ...CloudDatabaseClusterResult
  }
}
mutation cloudDatabaseClusterDelete(
  $cloudDatabaseClusterResourceInput: CloudDatabaseClusterResourceInput!
) {
  cloudDatabaseClusterDelete(cloudDatabase: $cloudDatabaseClusterResourceInput)
}

query getCloudDatabaseClusters {
  # @genqlient(flatten: true)
  cloudDatabaseClusters {
    ...CloudDatabaseClusterResult
  }
}

query getCloudDatabaseCluster(
  $cloudDatabaseClusterInput: CloudDatabaseClusterResourceInput!
) {
  # @genqlient(flatten: true)
  cloudDatabaseCluster(cloudDatabase: $cloudDatabaseClusterInput) {
    ...CloudDatabaseClusterResult
  }
}

mutation cloudDatabaseClusterModify(
  $cloudDatabaseClusterModifyInput: CloudDatabaseClusterModifyInput!
) {
  # @genqlient(flatten: true)
  cloudDatabaseClusterModify(
    cloudDatabaseClusterInput: $cloudDatabaseClusterModifyInput
  ) {
    ...CloudDatabaseClusterResult
  }
}

query getCloudDatabaseClusterUserCredentials(
  $cloudDatabase: CloudDatabaseClusterResourceInput!
  $userName: String!
) {
  cloudDatabaseClusterUserCredentials(
    cloudDatabase: $cloudDatabase
    username: $userName
  ) {
    dsn
  }
}

mutation createCloudDatabaseClusterDatabase(
  $cloudDatabaseClusterDatabaseInput: CloudDatabaseClusterDatabaseCreateInput!
) {
  # @genqlient(flatten: true)
  cloudDatabaseClusterDatabaseCreate(
    databaseInput: $cloudDatabaseClusterDatabaseInput
  ) {
    ...CloudDatabaseClusterDatabaseResult
  }
}

mutation deleteCloudDatabaseClusterDatabase(
  $cloudDatabaseClusterDatabaseInput: CloudDatabaseClusterDatabaseResourceInput!
) {
  cloudDatabaseClusterDatabaseDelete(
    databaseInput: $cloudDatabaseClusterDatabaseInput
  )
}

query clusterPlans {
  # @genqlient(flatten: true)
  cloudDatabaseClusterPlans {
    ...CloudDatabaseClusterPlan
  }
}

query clusterVersions {
  # @genqlient(flatten: true)
  cloudDatabaseClusterVersions {
    ...CloudDatabaseClusterSpec
  }
}
