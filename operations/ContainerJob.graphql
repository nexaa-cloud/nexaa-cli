fragment ContainerJobResult on ContainerJob {
    name
    image
    privateRegistry {
        name
    }
    resources
    # @genqlient(flatten: true)
    environmentVariables {
        ... EnvironmentVariableResult
    }
    command
    # @genqlient(flatten: true)
    mounts {
        ... ContainerMounts
    }
    schedule
    enabled
    state
}

mutation containerJobCreate($scheduledJob: ContainerJobCreateInput!) {
    # @genqlient(flatten: true)
    containerJobCreate(scheduledJob: $scheduledJob) {
      ... ContainerJobResult
    }
}

mutation containerJobModify($scheduledJob: ContainerJobModifyInput!) {
    # @genqlient(flatten: true)
    containerJobModify(scheduledJob: $scheduledJob) {
        ... ContainerJobResult
    }
}

mutation containerJobDelete($namesapceName: String!, $containerJobName: String!) {
    containerJobDelete ( scheduledJob: {name: $containerJobName, namespace: $namesapceName })
}

query containerJobList($namespaceName: String!) {
    namespace (name: $namespaceName){
        containerJobs {
             ... ContainerJobResult
        }
    }
}

query containerJobByName($namespaceName: String!, $containerName: String!) {
    # @genqlient(flatten: true)
    containerJob(name: $containerName, namespace: $namespaceName) {
        ... ContainerJobResult
    }
}
